import os
import re
import glob
from shutil import move
from torchvision.datasets.utils import download_and_extract_archive, extract_archive

def prepare_imagenet_val(data_root='./data/imagenet-1k'):
    """
    –°–æ–±–∏—Ä–∞–µ—Ç –ø–∞–ø–∫—É data_root/val –∏–∑ —Ñ–∞–π–ª–æ–≤ –≤–∏–¥–∞ ILSVRC2012_val_00050000.JPEG.
    –ï—Å–ª–∏ –Ω–µ—Ç wnids.txt ‚Äî –±–µ—Ä—ë—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ train/.
    –ï—Å–ª–∏ –Ω–µ—Ç validation_ground_truth.txt ‚Äî –ø—Ä–æ–±—É–µ—Ç —Å–∫–∞—á–∞—Ç—å devkit.
    """
    # –ø—É—Ç–∏
    train_dir = os.path.join(data_root, 'train')
    val_folder = os.path.join(data_root, 'val')
    devkit_dir = os.path.join(data_root, 'ILSVRC2012_devkit_t12')
    archive_base = os.path.dirname(data_root)
    devkit_tar = os.path.join(archive_base, 'ILSVRC2012_devkit_t12.tar.gz')

    # 1) –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π
    ann_list = glob.glob(os.path.join(devkit_dir, '**', 'ILSVRC2012_validation_ground_truth.txt'),
                         recursive=True)
    if not ann_list:
        # —Å–∫–∞—á–∏–≤–∞–µ–º –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º devkit
        print("üì¶ –°–∫–∞—á–∏–≤–∞–µ–º/–ø–µ—Ä–µ–∑–∞–ø–∞–∫–æ–≤—ã–≤–∞–µ–º devkit –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π...")
        if os.path.isdir(devkit_dir):  # —Å—Ç–∞—Ä—ã–π –º—É—Å–æ—Ä ‚Äî —É–¥–∞–ª—è–µ–º
            import shutil
            shutil.rmtree(devkit_dir)
        download_and_extract_archive(
            url='https://image-net.org/data/ILSVRC/2012/ILSVRC2012_devkit_t12.tar.gz',
            download_root=archive_base,
            extract_root=data_root,
            filename=os.path.basename(devkit_tar)
        )
        ann_list = glob.glob(os.path.join(devkit_dir, '**', 'ILSVRC2012_validation_ground_truth.txt'),
                             recursive=True)
        if not ann_list:
            raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª validation_ground_truth.txt –¥–∞–∂–µ –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è devkit")
    ann_path = ann_list[0]
    gt = [int(x) for x in open(ann_path, 'r')]

    # 2) –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤ (wnids)
    wnids_list = glob.glob(os.path.join(devkit_dir, '**', 'wnids.txt'),
                           recursive=True)
    if wnids_list:
        wnids = [x.strip() for x in open(wnids_list[0], 'r')]
    else:
        # fallback: –±–µ—Ä—ë–º –ø–∞–ø–∫–∏ –∏–∑ train/
        print("‚ö†Ô∏è wnids.txt –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ train/")
        if not os.path.isdir(train_dir):
            raise RuntimeError("–ü–∞–ø–∫–∞ train/ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∞ wnids.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        wnids = sorted(d for d in os.listdir(train_dir)
                       if os.path.isdir(os.path.join(train_dir, d)))

    # 3) —Å–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É val –∏ —Ä–∞—Å–∫–ª–∞–¥—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
    os.makedirs(val_folder, exist_ok=True)
    pattern = os.path.join(data_root, 'ILSVRC2012_val_*.JPEG')
    files = glob.glob(pattern)
    if not files:
        raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã ILSVRC2012_val_*.JPEG –≤ " + data_root)

    for img_path in files:
        img_name = os.path.basename(img_path)
        idx = int(re.search(r'_(\d+)\.JPEG', img_name, re.IGNORECASE).group(1))
        cls = wnids[gt[idx-1] - 1]
        dst_dir = os.path.join(val_folder, cls)
        os.makedirs(dst_dir, exist_ok=True)
        move(img_path, os.path.join(dst_dir, img_name))

    total = sum(len(files) for _,_,files in os.walk(val_folder))
    print(f"‚úÖ –ì–æ—Ç–æ–≤–æ: {len(wnids)} –∫–ª–∞—Å—Å–æ–≤, {total} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ {val_folder}")

if __name__ == '__main__':
    prepare_imagenet_val()
